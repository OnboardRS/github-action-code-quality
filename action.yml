name: 'Code Quality Config'
description: 'Combined quality configuration. Copies standards files to repo.'
inputs:
  solutionPath:
    required: true
    description: 'The solution file.'
  codingStandardsRepo:
    required: true
    description: 'The coding standards repo to copy .editorconfig and DotSettings from.'
  gitHubCheckInToken: 
    required: true
    description: 'The personal access token for github to check in with. Cannot be default PAT or checkin will not occur.'
  gitHubActor: 
    required: true
    description: 'The nuget.config actor for nuget update.'
  gitHubArtifactToken: 
    required: true
    description: 'The personal access token for github to pull org nuget packages.'
  applyCSharpStandards: 
    required: false
    description: 'If standards actions should be applied to C Sharp projects.'
    default: 'false'
  applyPulumiStandards: 
    required: false
    description: 'If standards actions should be applied to Pulumi projects.'
    default: 'false'
  applyUIStandards:
    required: false
    description: 'If standards actions should be applied to UI projects.'
    default: 'false'
  toDoIssueLabelsCsv: 
    required: false
    description: 'DEPRECATED: The label(s) to apply to GitHub issues created by TODO as csv.'
runs:
  using: 'composite'
  steps:
    - name: Checkout Coding Standards
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.codingStandardsRepo }}
        token: ${{ inputs.gitHubCheckInToken }}
        path: ./coding-standards
    - name: Git Configure
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ inputs.gitHubCheckInToken }}" >> $GITHUB_ENV
        git config --global user.name "Build Action"
        git config --global user.email "build@letsonboard.com"        
    - name: Config Display
      shell: bash
      run: |
        echo "Apply C# Standards? [applyCSharpStandards] [${{ inputs.applyCSharpStandards }}]"
        echo "Apply Pulumi Standards? [applyPulumiStandards] [${{ inputs.applyPulumiStandards }}]"
        echo "Apply UI Standards? [applyUIStandards] [${{ inputs.applyUIStandards }}]"
    - name: Copy And Include C Sharp Standards Files
      shell: bash
      if: ${{ inputs.applyCSharpStandards == 'true' }}
      run: |
        echo "Handling C Sharp standards files"
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/c-sharp/solution-root-standards/cSharpStandardsFilesToCopy.txt ${{ inputs.solutionPath }} ./
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/c-sharp/actions/cSharpActionFilesToCopy.txt ${{ inputs.solutionPath }} ./.github/workflows/
    - name: Ensure C Sharp Git Ignore Contents
      shell: bash
      if: ${{ inputs.applyCSharpStandards == 'true' }}
      run: |
        ./coding-standards/helper-scripts/addGitIgnoreEntries.sh .gitignore ./coding-standards/c-sharp/solution-root-standards/cSharpGitIgnoreEntries.txt
    - name: Copy And Include Pulumi Standards Files
      shell: bash
      if: ${{ inputs.applyPulumiStandards == 'true' }}
      run: |
        echo "Handling Pulumi standards files"
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/pulumi/solution-root-standards/pulumiStandardsFilesToCopy.txt ${{ inputs.solutionPath }} ./
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/pulumi/actions/pulumiActionFilesToCopy.txt ${{ inputs.solutionPath }} ./.github/workflows/
    - name: Ensure Pulumi Git Ignore Contents
      shell: bash
      if: ${{ inputs.applyPulumiStandards == 'true' }}
      run: |
        ./coding-standards/helper-scripts/addGitIgnoreEntries.sh .gitignore ./coding-standards/pulumi/solution-root-standards/pulumiGitIgnoreEntries.txt
    - name: Copy and Include UI Standards Files
      shell: bash
      if: ${{ inputs.applyUIStandards == 'true' }}
      run: |
        echo "Handling UI standards files"
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/ui/solution-root-standards/uiStandardsFilesToCopy.txt ${{ inputs.solutionPath }} ./
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/ui/actions/uiActionFilesToCopy.txt ${{ inputs.solutionPath }} ./.github/workflows/
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/ui/setup-scripts/uiSetupScriptFilesToCopy.txt ${{ inputs.solutionPath }} ./.coding-standards/
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/ui/hooks/uiHookFilesToCopy.txt ${{ inputs.solutionPath }} ./.coding-standards/hooks/
        ./coding-standards/helper-scripts/copyStandardsFiles.sh ./coding-standards/ui/husky-entries/uiHuskyEntryFilesToCopy.txt ${{ inputs.solutionPath }} ./.coding-standards/husky-entries/
    - name: Standardize UI Package Json
      shell: bash
      if: ${{ inputs.applyUIStandards == 'true' }}
      run: |
        echo "Updating package.json"
        chmod u+x ./coding-standards/helper-scripts/uiStandardizePackageJson.sh
        ./coding-standards/helper-scripts/uiStandardizePackageJson.sh
    - name: Ensure UI Git Ignore, Prettier Ignore, and ESLint Ignore Contents
      shell: bash
      if: ${{ inputs.applyUIStandards == 'true' }}
      run: |
        ./coding-standards/helper-scripts/addGitIgnoreEntries.sh .gitignore ./coding-standards/ui/solution-root-standards/uiGitIgnoreEntries.txt
        ./coding-standards/helper-scripts/addGitIgnoreEntries.sh .prettierignore ./coding-standards/ui/solution-root-standards/uiPrettierIgnoreEntries.txt
        ./coding-standards/helper-scripts/addGitIgnoreEntries.sh .eslintignore ./coding-standards/ui/solution-root-standards/uiEslintIgnoreEntries.txt
    - name: Did something run
      shell: bash
      if: ${{ inputs.applyCSharpStandards != 'true' && inputs.applyPulumiStandards != 'true' && inputs.applyUIStandards != 'true' }}
      run: |
        echo "No actions were peformed, check inputs [applyCSharpStandards, applyPulumiStandards, applyUIStandards] for one to have a string true value."
